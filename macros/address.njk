{% from "form.njk" import csrfProtection, textInput, radioGroup, saveAndContinueButton %}

{% macro addressForm(form, csrfToken) %}
    <form method="post">
        {{ csrfProtection(csrfToken) }}

        {{ addressFragment(form) }}
        {{ saveAndContinueButton() }}
    </form>
{% endmacro %}

{% macro postcodeLookupAddressFragment(form, name) %}
  <div class="notice postcode-lookup">
    {% set postcodeInputName = name + '[postcodeLookup]' if name else 'postcodeLookup' %}
    <div class="form-group notice postcode-search-container hidden js-visible">
      <label id="{{ postcodeInputName }}[label]" for="{{ postcodeInputName }}" class="form-label">{{ t('Enter a UK postcode') }}</label>

      <div class="missing-postcode-error js-error hidden" data-label="{{ postcodeInputName }}[label]">
        <span class="error-message">
         {{ t('Enter postcode') }}
        </span>
      </div>
      <div class="unsupported-postcode-error js-error hidden" data-label="{{ postcodeInputName }}[label]">
        <span class="error-message">
         {{ t('We can’t find Northern Irish addresses by postcode - enter the address manually instead.') }}
        </span>
      </div>
      <div class="unknown-error js-error hidden" data-label="{{ postcodeInputName }}[label]">
        <span class="error-message">
          {{ t('We can’t find an address for that postcode. Try again or enter the address manually.') }}
        </span>
      </div>

      <input  id="{{ postcodeInputName }}"
              class="form-control"
              name="{{ postcodeInputName }}"
              value="{{ form.rawDataFor(postcodeInputName) | default('') }}"
              autocomplete="postal-code" />

      <a href="#" role="button" class="button button-secondary postcode-search">
        {{ t('Find address') }}
      </a>
    </div>

    {% set addressSelectName = name + '[addressList]' if name else 'addressList' %}
    <div class="form-group address-picker-container hidden">
      <div class="form-group">
        <label id="{{ addressSelectName }}[label]" class="form-label">
          {{ t('Pick an address') }}
        </label>

        <div class="missing-address-error js-error hidden" data-label="{{ addressSelectName }}[label]">
          <span class="error-message">
           {{ t('Select an address') }}
          </span>
        </div>

        <select id="{{ addressSelectName }}"
                class="form-control postcode-select"
                name="{{ addressSelectName }}"
                title="{{ t('Pick an address') }}">
        </select>
      </div>
    </div>

    <div class="address js-hidden">
        {% set line1Name = name + '[line1]' if name else 'line1' %}
        {% set line2Name = name + '[line2]' if name else 'line2' %}

        {% set line1Error = form.errorFor(line1Name) %}
        {% set line2Error = form.errorFor(line2Name) %}

      <div class="form-group{{ ' form-group-error' if line1Error or line2Error else '' }}">
        <label id="{{ line1Name }}[label]" class="form-label" for="{{ line1Name }}">{{ t('Address') }}</label>
        {% if line1Error %}
          <span class="error-message">{{ t(line1Error) }}</span>
        {% endif %}
        <input id="{{ line1Name }}"
               class="form-control address-line1 {% if line1Error %} form-control-error{% endif %}"
               name="{{ line1Name }}"
               autocomplete="address-line1"
               value="{{ form.valueFor(line1Name) | default('') }}" />
        {% if line2Error %}
          <span class="error-message">{{ t(line2Error) }}</span>
        {% endif %}
        <input class="form-control second-text-input address-line2 {% if line2Error %} form-control-error{% endif %}"
               name="{{ line2Name }}"
               autocomplete="address-line2"
               value="{{ form.valueFor(line2Name) | default('') }}"
               title="{{ t('Street line 2') }}" />
      </div>
      {{ textInput('Town or city', name + '[city]' if name else 'city', form, inputClass='address-town-or-city',
        compound = true, autocomplete = 'address-level2') }}
      {{ textInput('Postcode', name + '[postcode]' if name else 'postcode', form, inputClass='postcode form-control-1-4',
        autocomplete = 'postal-code') }}
    </div>

    <a href="#" class="enter-address-manually-link js-visible hidden">{{ t('Enter address manually') }}</a>

    {% set stateName = name + '[state]' if name else 'state' %}
    <input class="state-holder" type="hidden" name="{{ stateName }}" value="{{ form.rawDataFor(stateName) | default('') }}">
  </div>
{% endmacro %}

{% macro addressFragment(form, name) %}
  {{ textInput(t('Address line 1'), name + '[line1]' if name else 'line1', form, compound=true, autocomplete = 'address-line1') }}
  {{ textInput(t('Address line 2 (optional)'), name + '[line2]' if name else 'line2', compound=true, form, autocomplete = 'address-line2') }}
  {{ textInput(t('Town or city'), name + '[city]' if name else 'city', form, compound=true, autocomplete = 'address-level2') }}
  {{ textInput(t('Postcode'), name + '[postcode]' if name else 'postcode', form, inputClass='postcode', autocomplete = 'postal-code') }}
{% endmacro %}

{% macro correspondenceAddressFragment(form) %}
  <h2 class="heading-medium">{{ t('Correspondence address') }}</h2>

  {{
  radioGroup(
  label = t('Would you like correspondence sent to a different address?'),
  name = 'hasCorrespondenceAddress',
  options = [
  { label: 'No', value: false },
  { label: 'Yes, add a correspondence address', value: true }
  ],
  isInline = false,
  form = form
  )
  }}

  <div class="panel panel-border-narrow js-hidden" id="hasCorrespondenceAddress-true" aria-hidden="false">
    <p>{{ t('All correspondence will be sent to this address. This is sometimes known as an ’address for service’.') | safe }}</p>
    {{ postcodeLookupAddressFragment(form, name = 'correspondenceAddress') }}
  </div>
{% endmacro %}
